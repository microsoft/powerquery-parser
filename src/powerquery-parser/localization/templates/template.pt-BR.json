{
  "error_common_cancellationError": "CancellationError: uma solicitação de cancelamento foi feita.",
  "error_common_invariantError_1_details": "InvariantError: {invariantBroken} - {details}",
  "error_common_invariantError_2_noDetails": "InvariantError: {invariantBroken}",
  "error_common_unknown": "Um erro desconhecido foi encontrado; innerError: {innerError}",
  "error_lex_badLineNumber_1_greaterThanNumLines": "lineNumber é maior ou igual ao número de linhas",
  "error_lex_badLineNumber_2_lessThanZero": "lineNumber é menor ou igual a 0",
  "error_lex_badRange_1_lineNumberEnd_greaterThanLineLength": "end.lineCodeUnit é maior do que o comprimento da linha",
  "error_lex_badRange_2_lineNumberEnd_greaterThanLineNumbers": "end.lineNumber é maior do que o número de linhas do Estado",
  "error_lex_badRange_3_lineNumberStart_greaterThanLineLength": "start.lineCodeUnit é maior do que o comprimento da linha",
  "error_lex_badRange_4_lineNumberStart_greaterThanLineNumberEnd": "start.lineNumber é maior do que end.lineNumber",
  "error_lex_badRange_5_lineNumberStart_greaterThanNumLines": "start.lineNumber é maior do que o número de linhas do Estado",
  "error_lex_badRange_6_lineNumberStart_lessThanZero": "start.lineNumber é menor do que 0",
  "error_lex_badRange_7_sameLine_codeUnitStartGreaterThanCodeUnitEnd": "O início e o fim compartilharam a mesma linha, mas start.lineCodeUnit era maior do que end.lineCodeUnit",
  "error_lex_badState": "O analisador léxico encontrou um erro na última execução. Alimente-o com mais texto ou examine o erro anterior.",
  "error_lex_endOfStream": "O analisador léxico atingiu o fim do fluxo",
  "error_lex_endOfStreamPartwayRead": "Ao tentar ler um token, o fluxo de documentos terminou antes do fim",
  "error_lex_expectedKind_1_hex": "Um literal hexadecimal era esperado",
  "error_lex_expectedKind_2_keywordOrIdentifier": "Uma palavra-chave ou um identificador era esperado",
  "error_lex_expectedKind_3_numeric": "Um literal numérico era esperado",
  "error_lex_lineMap": "Erro encontrado nas linhas: {lineNumbers}",
  "error_lex_unexpectedRead": "Leitura inesperada durante a geração de tokens",
  "error_lex_unterminatedMultilineToken_1_comment": "Comentário multilinha não terminado",
  "error_lex_unterminatedMultilineToken_2_quotedIdentifier": "Identificador entre aspas não terminado",
  "error_lex_unterminatedMultilineToken_3_string": "Cadeia de caracteres não terminada",
  "error_parse_csvContinuation_1_danglingComma": "Você deixou uma vírgula final?",
  "error_parse_csvContinuation_2_letExpression": "Uma vírgula não pode anteceder um 'in'",
  "error_parse_expectAnyTokenKind_1_other": "Esperava-se encontrar um dos seguintes itens, mas um {foundTokenKind} foi encontrado no lugar: {expectedAnyTokenKinds}",
  "error_parse_expectAnyTokenKind_2_endOfStream": "Esperava-se encontrar um dos seguintes itens, mas o fim do fluxo foi atingido em vez disso: {expectedAnyTokenKinds}",
  "error_parse_expectGeneralizedIdentifier_1_other": "Esperava-se encontrar um identificador genérico",
  "error_parse_expectGeneralizedIdentifier_2_endOfStream": "Esperava-se encontrar um identificador genérico, mas o fim do fluxo foi alcançado primeiro",
  "error_parse_expectTokenKind_1_other": "Esperava-se encontrar um {expectedTokenKind}, porém, um {foundTokenKind} foi encontrado",
  "error_parse_expectTokenKind_2_endOfStream": "Esperava-se encontrar um {expectedTokenKind}, mas o fim do fluxo foi alcançado em vez disso",
  "error_parse_invalidCatchFunction": "The 'catch' clause of a try/catch expression must be followed by a function definition with 0 or 1 arguments and no type constraints",
  "error_parse_invalidPrimitiveType": "Esperava-se encontrar um literal primitivo, mas um {foundTokenKind} foi encontrado em vez disso",
  "error_parse_requiredParameterAfterOptional": "Não é possível ter um parâmetro não opcional após um parâmetro opcional",
  "error_parse_unterminated_sequence_bracket": "Colchete não terminado",
  "error_parse_unterminated_sequence_parenthesis": "Parêntese não terminado",
  "error_parse_unusedTokens": "A análise foi concluída, mas alguns tokens permanecem",
  "tokenKind_ampersand": "e comercial <'&'>",
  "tokenKind_asterisk": "asterisco <'*'>",
  "tokenKind_atSign": "sinal de arroba <'@'>",
  "tokenKind_bang": "ponto de exclamação <'!'>",
  "tokenKind_comma": "vírgula <','>",
  "tokenKind_division": "operador de divisão <'/'>",
  "tokenKind_dotDot": "ponto ponto <'..'>",
  "tokenKind_ellipsis": "reticências <'...'>",
  "tokenKind_equal": "operador de igualdade <'='>",
  "tokenKind_fatArrow": "vai para ('=>')",
  "tokenKind_greaterThan": "operador maior que ('>')",
  "tokenKind_greaterThanEqualTo": "operador maior ou igual a ('>=')",
  "tokenKind_hexLiteral": "literal hexadecimal",
  "tokenKind_identifier": "identificador",
  "tokenKind_keywordAnd": "palavra-chave <'and'>",
  "tokenKind_keywordAs": "palavra-chave <'as'>",
  "tokenKind_keywordEach": "palavra-chave <'each'>",
  "tokenKind_keywordElse": "palavra-chave <'else'>",
  "tokenKind_keywordError": "palavra-chave <'error'>",
  "tokenKind_keywordFalse": "palavra-chave <'false'>",
  "tokenKind_keywordHashBinary": "palavra-chave <'#binary'>",
  "tokenKind_keywordHashDate": "palavra-chave <'#date'>",
  "tokenKind_keywordHashDateTime": "palavra-chave <'#datetime'>",
  "tokenKind_keywordHashDateTimeZone": "palavra-chave <'#datetimezone'>",
  "tokenKind_keywordHashDuration": "palavra-chave <'#duration'>",
  "tokenKind_keywordHashInfinity": "palavra-chave <'#infinity'>",
  "tokenKind_keywordHashNan": "palavra-chave <'#nan'>",
  "tokenKind_keywordHashSections": "palavra-chave <'#sections'>",
  "tokenKind_keywordHashShared": "palavra-chave <'#shared'>",
  "tokenKind_keywordHashTable": "palavra-chave <'#table'>",
  "tokenKind_keywordHashTime": "palavra-chave <'#time'>",
  "tokenKind_keywordIf": "palavra-chave <'if'>",
  "tokenKind_keywordIn": "palavra-chave <'in'>",
  "tokenKind_keywordIs": "palavra-chave <'is'>",
  "tokenKind_keywordLet": "palavra-chave <'let'>",
  "tokenKind_keywordMeta": "palavra-chave <'meta'>",
  "tokenKind_keywordNot": "palavra-chave <'not'>",
  "tokenKind_keywordOr": "palavra-chave <'or'>",
  "tokenKind_keywordOtherwise": "palavra-chave <'otherwise'>",
  "tokenKind_keywordSection": "palavra-chave <'section'>",
  "tokenKind_keywordShared": "palavra-chave <'shared'>",
  "tokenKind_keywordThen": "palavra-chave <'then'>",
  "tokenKind_keywordTrue": "palavra-chave <'true'>",
  "tokenKind_keywordTry": "palavra-chave <'try'>",
  "tokenKind_keywordType": "palavra-chave <'type'>",
  "tokenKind_leftBrace": "chave esquerda <'{'>",
  "tokenKind_leftBracket": "colchete esquerdo <'['>",
  "tokenKind_leftParenthesis": "parêntese esquerdo <'('>",
  "tokenKind_lessThan": "operador menor que ('<')",
  "tokenKind_lessThanEqualTo": "operador menor ou igual a ('<=')",
  "tokenKind_minus": "menos <'-'>",
  "tokenKind_notEqual": "operador diferente de ('<>')",
  "tokenKind_nullCoalescingOperator": "operador de avaliação de nulo <'??'>",
  "tokenKind_nullLiteral": "<'null'>",
  "tokenKind_numericLiteral": "literal numérico",
  "tokenKind_plus": "o operador de adição <'+'>",
  "tokenKind_questionMark": "ponto de interrogação <'?'>",
  "tokenKind_rightBrace": "chave direita <'}'>",
  "tokenKind_rightBracket": "colchete direito <']'>",
  "tokenKind_rightParenthesis": "parêntese direito <')'>",
  "tokenKind_semicolon": "ponto e vírgula <';'>",
  "tokenKind_textLiteral": "texto"
}