{
  "error_common_cancellationError": "CancellationError: wykonano żądanie anulowania.",
  "error_common_invariantError_1_details": "InvariantError: {invariantBroken} — {details}",
  "error_common_invariantError_2_noDetails": "InvariantError: {invariantBroken}",
  "error_common_unknown": "Napotkano nieznany błąd, innerError: {innerError}",
  "error_lex_badLineNumber_1_greaterThanNumLines": "Wartość lineNumber jest większa niż liczba wierszy lub jej równa",
  "error_lex_badLineNumber_2_lessThanZero": "Wartość lineNumber jest mniejsza niż 0 lub równa 0",
  "error_lex_badRange_1_lineNumberEnd_greaterThanLineLength": "Wartość end.lineCodeUnit jest większa niż długość wiersza",
  "error_lex_badRange_2_lineNumberEnd_greaterThanLineNumbers": "Wartość end.lineNumber jest większa niż liczba wierszy stanu",
  "error_lex_badRange_3_lineNumberStart_greaterThanLineLength": "Wartość start.lineCodeUnit jest większa niż długość wiersza",
  "error_lex_badRange_4_lineNumberStart_greaterThanLineNumberEnd": "Wartość start.lineNumber jest większa niż end.lineNumber",
  "error_lex_badRange_5_lineNumberStart_greaterThanNumLines": "Wartość start.lineNumber jest większa niż liczba wierszy stanu",
  "error_lex_badRange_6_lineNumberStart_lessThanZero": "Wartość start.lineNumber jest mniejsza niż 0",
  "error_lex_badRange_7_sameLine_codeUnitStartGreaterThanCodeUnitEnd": "Początek i koniec znajdowały się w tym samym wierszu, ale wartość start.lineCodeUnit była wyższa niż end.lineCodeUnit",
  "error_lex_badState": "Analizator leksykalny napotkał błąd podczas ostatniego uruchomienia. Przekaż więcej tekstu do analizatora leksykalnego lub przejrzyj poprzedni błąd.",
  "error_lex_endOfStream": "Analizator leksykalny osiągnął koniec strumienia",
  "error_lex_endOfStreamPartwayRead": "Podczas próby odczytania tokenu strumień dokumentu zakończył się w środku tokenu",
  "error_lex_expectedKind_1_hex": "Oczekiwano literału szesnastkowego",
  "error_lex_expectedKind_2_keywordOrIdentifier": "Oczekiwano słowa kluczowego lub identyfikatora",
  "error_lex_expectedKind_3_numeric": "Oczekiwano literału liczbowego",
  "error_lex_lineMap": "Błąd w wierszach: {lineNumbers}",
  "error_lex_unexpectedRead": "Nieoczekiwany odczyt podczas tokenizacji",
  "error_lex_unterminatedMultilineToken_1_comment": "Niezakończony komentarz wielowierszowy",
  "error_lex_unterminatedMultilineToken_2_quotedIdentifier": "Niezakończony cytowany identyfikator",
  "error_lex_unterminatedMultilineToken_3_string": "Niezakończony ciąg",
  "error_parse_csvContinuation_1_danglingComma": "Czy pozostał przecinek końcowy?",
  "error_parse_csvContinuation_2_letExpression": "Przecinek nie może poprzedzać operatora 'in'",
  "error_parse_expectAnyTokenKind_1_other": "Znaleziono token {foundTokenKind}, a oczekiwano jednego z następujących tokenów: {expectedAnyTokenKinds}",
  "error_parse_expectAnyTokenKind_2_endOfStream": "Osiągnięto koniec strumienia, a oczekiwano jednego z następujących tokenów: {expectedAnyTokenKinds}",
  "error_parse_expectedCommaOrTokenKind": "Expected to find either a {localizedComma} or {localizedAlternative}.",
  "error_parse_expectGeneralizedIdentifier_1_other": "Oczekiwano identyfikatora uogólnionego",
  "error_parse_expectGeneralizedIdentifier_2_endOfStream": "Oczekiwano identyfikatora uogólnionego, ale osiągnięto wcześniej koniec strumienia",
  "error_parse_expectTokenKind_1_other": "Oczekiwano tokenu {expectedTokenKind}, ale znaleziono token {foundTokenKind}",
  "error_parse_expectTokenKind_2_endOfStream": "Oczekiwano tokenu {expectedTokenKind}, a osiągnięto koniec strumienia",
  "error_parse_invalidCatchFunction": "Po klauzuli „catch” wyrażenia try/catch musi następować definicja funkcji z 0 lub 1 argumentami i bez ograniczeń typów",
  "error_parse_invalidPrimitiveType": "Oczekiwano podstawowego literału, ale znaleziono token {foundTokenKind}",
  "error_parse_requiredParameterAfterOptional": "Nieopcjonalny parametr nie może występować po opcjonalnym parametrze",
  "error_parse_unterminated_sequence_bracket": "Niezakończony nawias kwadratowy",
  "error_parse_unterminated_sequence_parenthesis": "Niezakończony nawias okrągły",
  "error_parse_unusedTokens": "Zakończono analizowanie, ale pozostały tokeny",
  "tokenKind_ampersand": "ampersand <'&'>",
  "tokenKind_asterisk": "gwiazdka <'*'>",
  "tokenKind_atSign": "znak <'@'>",
  "tokenKind_bang": "wykrzyknik <'!'>",
  "tokenKind_comma": "przecinek <','>",
  "tokenKind_division": "operator dzielenia <'/'>",
  "tokenKind_dotDot": "dwie kropki <'..'>",
  "tokenKind_ellipsis": "wielokropek <'...'>",
  "tokenKind_equal": "operator równości <'='>",
  "tokenKind_fatArrow": "operator przechodzenia ('=>')",
  "tokenKind_greaterThan": "operator „większe niż” ('>')",
  "tokenKind_greaterThanEqualTo": "operator „większe niż lub równe” ('>=')",
  "tokenKind_hexLiteral": "literał szesnastkowy",
  "tokenKind_identifier": "identyfikator",
  "tokenKind_keywordAnd": "słowo kluczowe <'and'>",
  "tokenKind_keywordAs": "słowo kluczowe <'as'>",
  "tokenKind_keywordEach": "słowo kluczowe <'each'>",
  "tokenKind_keywordElse": "słowo kluczowe <'else'>",
  "tokenKind_keywordError": "słowo kluczowe <'error'>",
  "tokenKind_keywordFalse": "słowo kluczowe <'false'>",
  "tokenKind_keywordHashBinary": "słowo kluczowe <'#binary'>",
  "tokenKind_keywordHashDate": "słowo kluczowe <'#date'>",
  "tokenKind_keywordHashDateTime": "słowo kluczowe <'#datetime'>",
  "tokenKind_keywordHashDateTimeZone": "słowo kluczowe <'#datetimezone'>",
  "tokenKind_keywordHashDuration": "słowo kluczowe <'#duration'>",
  "tokenKind_keywordHashInfinity": "słowo kluczowe <'#infinity'>",
  "tokenKind_keywordHashNan": "słowo kluczowe <'#nan'>",
  "tokenKind_keywordHashSections": "słowo kluczowe <'#sections'>",
  "tokenKind_keywordHashShared": "słowo kluczowe <'#shared'>",
  "tokenKind_keywordHashTable": "słowo kluczowe <'#table'>",
  "tokenKind_keywordHashTime": "słowo kluczowe <'#time'>",
  "tokenKind_keywordIf": "słowo kluczowe <'if'>",
  "tokenKind_keywordIn": "słowo kluczowe <'in'>",
  "tokenKind_keywordIs": "słowo kluczowe <'is'>",
  "tokenKind_keywordLet": "słowo kluczowe <'let'>",
  "tokenKind_keywordMeta": "słowo kluczowe <'meta'>",
  "tokenKind_keywordNot": "słowo kluczowe <'not'>",
  "tokenKind_keywordOr": "słowo kluczowe <'or'>",
  "tokenKind_keywordOtherwise": "słowo kluczowe <'otherwise'>",
  "tokenKind_keywordSection": "słowo kluczowe <'section'>",
  "tokenKind_keywordShared": "słowo kluczowe <'shared'>",
  "tokenKind_keywordThen": "słowo kluczowe <'then'>",
  "tokenKind_keywordTrue": "słowo kluczowe <'true'>",
  "tokenKind_keywordTry": "słowo kluczowe <'try'>",
  "tokenKind_keywordType": "słowo kluczowe <'type'>",
  "tokenKind_leftBrace": "otwierający nawias klamrowy <'{'>",
  "tokenKind_leftBracket": "otwierający nawias kwadratowy <'['>",
  "tokenKind_leftParenthesis": "otwierający nawias okrągły <'('>",
  "tokenKind_lessThan": "operator „mniejsze niż” ('<')",
  "tokenKind_lessThanEqualTo": "operator „mniejsze niż lub równe” ('<=')",
  "tokenKind_minus": "minus <'-'>",
  "tokenKind_notEqual": "operator „nie jest równe” ('<>')",
  "tokenKind_nullCoalescingOperator": "operator koalescencyjny dla wartości null <'??'>",
  "tokenKind_nullLiteral": "<'null'>",
  "tokenKind_numericLiteral": "literał liczbowy",
  "tokenKind_plus": "operator dodawania <'+'>",
  "tokenKind_questionMark": "znak zapytania <'?'>",
  "tokenKind_rightBrace": "zamykający nawias klamrowy <'}'>",
  "tokenKind_rightBracket": "zamykający nawias kwadratowy <']'>",
  "tokenKind_rightParenthesis": "zamykający nawias okrągły <')'>",
  "tokenKind_semicolon": "średnik <';'>",
  "tokenKind_textLiteral": "tekst"
}