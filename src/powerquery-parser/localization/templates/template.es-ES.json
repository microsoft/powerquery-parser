{
  "error_common_cancellationError": "CancellationError: se ha efectuado una solicitud de cancelación.",
  "error_common_invariantError_1_details": "InvariantError: {invariantBroken}: {details}.",
  "error_common_invariantError_2_noDetails": "InvariantError: {invariantBroken}.",
  "error_common_unknown": "Se ha encontrado un error desconocido, innerError: {innerError}.",
  "error_lex_badLineNumber_1_greaterThanNumLines": "lineNumber es mayor o igual que el número de líneas.",
  "error_lex_badLineNumber_2_lessThanZero": "lineNumber es menor o igual que 0.",
  "error_lex_badRange_1_lineNumberEnd_greaterThanLineLength": "end.lineCodeUnit es mayor que la longitud de la línea.",
  "error_lex_badRange_2_lineNumberEnd_greaterThanLineNumbers": "end.lineNumber es mayor que el número de líneas del estado.",
  "error_lex_badRange_3_lineNumberStart_greaterThanLineLength": "start.lineCodeUnit es mayor que la longitud de la línea.",
  "error_lex_badRange_4_lineNumberStart_greaterThanLineNumberEnd": "start.lineNumber es mayor que end.lineNumber.",
  "error_lex_badRange_5_lineNumberStart_greaterThanNumLines": "start.lineNumber es mayor que el número de líneas del estado.",
  "error_lex_badRange_6_lineNumberStart_lessThanZero": "start.lineNumber es menor que 0.",
  "error_lex_badRange_7_sameLine_codeUnitStartGreaterThanCodeUnitEnd": "Start y end compartían la misma línea, pero start.lineCodeUnit era mayor que end.lineCodeUnit.",
  "error_lex_badState": "El analizador léxico ha encontrado un error en la última ejecución. Puede proporcionar más texto a analizador léxico o revisar el error anterior.",
  "error_lex_endOfStream": "Lexer ha alcanzado el fin de flujo.",
  "error_lex_endOfStreamPartwayRead": "Al intentar leer un token, el flujo del documento ha finalizado sin llegar al final.",
  "error_lex_expectedKind_1_hex": "Se esperaba un literal hexadecimal.",
  "error_lex_expectedKind_2_keywordOrIdentifier": "Se esperaba una palabra clave o un identificador.",
  "error_lex_expectedKind_3_numeric": "Se esperaba un literal numérico.",
  "error_lex_lineMap": "Error en las siguientes líneas: {lineNumbers}.",
  "error_lex_unexpectedRead": "Lectura inesperada durante la tokenización.",
  "error_lex_unterminatedMultilineToken_1_comment": "Comentario de varias líneas sin cerrar.",
  "error_lex_unterminatedMultilineToken_2_quotedIdentifier": "Identificador de comillas sin cerrar.",
  "error_lex_unterminatedMultilineToken_3_string": "Cadena sin cerrar.",
  "error_parse_csvContinuation_1_danglingComma": "¿Ha dejado una coma final?",
  "error_parse_csvContinuation_2_letExpression": "No puede haber una coma detrás de \"in\".",
  "error_parse_expectAnyTokenKind_1_other": "Se esperaba encontrar uno de los siguientes elementos, pero se ha encontrado {foundTokenKind} en su lugar: {expectedAnyTokenKinds}.",
  "error_parse_expectAnyTokenKind_2_endOfStream": "Se esperaba encontrar uno de los siguientes elementos, pero se ha alcanzado el fin de flujo en su lugar: {expectedAnyTokenKinds}.",
  "error_parse_expectGeneralizedIdentifier_1_other": "Se esperaba encontrar un identificador generalizado.",
  "error_parse_expectGeneralizedIdentifier_2_endOfStream": "Se esperaba encontrar un identificador generalizado, pero se ha alcanzado primero el fin de flujo.",
  "error_parse_expectTokenKind_1_other": "Se esperaba encontrar {expectedTokenKind}, pero se ha encontrado {foundTokenKind} en su lugar.",
  "error_parse_expectTokenKind_2_endOfStream": "Se esperaba encontrar {expectedTokenKind}, pero se ha alcanzado el fin de flujo en su lugar.",
  "error_parse_invalidCatchFunction": "La cláusula “catch” de una expresión try/catch deberá ir seguida de una definición de función con 0 o 1 argumentos y sin restricciones de tipo",
  "error_parse_invalidPrimitiveType": "Se esperaba encontrar un literal primitivo, pero se ha encontrado {foundTokenKind} en su lugar.",
  "error_parse_requiredParameterAfterOptional": "No puede tener un parámetro no opcional tras un parámetro opcional.",
  "error_parse_unterminated_sequence_bracket": "Corchete sin cerrar.",
  "error_parse_unterminated_sequence_parenthesis": "Paréntesis sin cerrar.",
  "error_parse_unusedTokens": "Se ha finalizado el análisis, pero quedan varios tokens.",
  "tokenKind_ampersand": "y comercial <'&'>",
  "tokenKind_asterisk": "asterisco <'*'>",
  "tokenKind_atSign": "signo de arroba <'@'>",
  "tokenKind_bang": "signo de exclamación <'!'>",
  "tokenKind_comma": "coma <','>",
  "tokenKind_division": "operador de división <'/'>",
  "tokenKind_dotDot": "punto punto <'..'>",
  "tokenKind_ellipsis": "puntos suspensivos <'...'>",
  "tokenKind_equal": "operador de igual <'='>",
  "tokenKind_fatArrow": "va a ('=>')",
  "tokenKind_greaterThan": "operador de mayor que ('>')",
  "tokenKind_greaterThanEqualTo": "operador de mayor o igual que ('>=')",
  "tokenKind_hexLiteral": "literal hexadecimal",
  "tokenKind_identifier": "identificador",
  "tokenKind_keywordAnd": "palabra clave <'and'>",
  "tokenKind_keywordAs": "palabra clave <'as'>",
  "tokenKind_keywordEach": "palabra clave <'each'>",
  "tokenKind_keywordElse": "palabra clave <'else'>",
  "tokenKind_keywordError": "palabra clave <'error'>",
  "tokenKind_keywordFalse": "palabra clave <'false'>",
  "tokenKind_keywordHashBinary": "palabra clave <'#binary'>",
  "tokenKind_keywordHashDate": "palabra clave <'#date'>",
  "tokenKind_keywordHashDateTime": "palabra clave <'#datetime'>",
  "tokenKind_keywordHashDateTimeZone": "palabra clave <'#datetimezone'>",
  "tokenKind_keywordHashDuration": "palabra clave <'#duration'>",
  "tokenKind_keywordHashInfinity": "palabra clave <'#infinity'>",
  "tokenKind_keywordHashNan": "palabra clave <'#nan'>",
  "tokenKind_keywordHashSections": "palabra clave <'#sections'>",
  "tokenKind_keywordHashShared": "palabra clave <'#shared'>",
  "tokenKind_keywordHashTable": "palabra clave <'#table'>",
  "tokenKind_keywordHashTime": "palabra clave <'#time'>",
  "tokenKind_keywordIf": "palabra clave <'if'>",
  "tokenKind_keywordIn": "palabra clave <'in'>",
  "tokenKind_keywordIs": "palabra clave <'is'>",
  "tokenKind_keywordLet": "palabra clave <'let'>",
  "tokenKind_keywordMeta": "palabra clave <'meta'>",
  "tokenKind_keywordNot": "palabra clave <'not'>",
  "tokenKind_keywordOr": "palabra clave <'or'>",
  "tokenKind_keywordOtherwise": "palabra clave <'otherwise'>",
  "tokenKind_keywordSection": "palabra clave <'section'>",
  "tokenKind_keywordShared": "palabra clave <'shared'>",
  "tokenKind_keywordThen": "palabra clave <'then'>",
  "tokenKind_keywordTrue": "palabra clave <'true'>",
  "tokenKind_keywordTry": "palabra clave <'try'>",
  "tokenKind_keywordType": "palabra clave <'type'>",
  "tokenKind_leftBrace": "llave de apertura <'{'>",
  "tokenKind_leftBracket": "corchete de apertura <'['>",
  "tokenKind_leftParenthesis": "paréntesis de apertura <'('>",
  "tokenKind_lessThan": "operador de menor que ('<')",
  "tokenKind_lessThanEqualTo": "operador de menor o igual que ('<=')",
  "tokenKind_minus": "menos <'-'>",
  "tokenKind_notEqual": "operador de no es igual ('<>')",
  "tokenKind_nullCoalescingOperator": "Operador de fusión de NULL <'??'>",
  "tokenKind_nullLiteral": "<'null'>",
  "tokenKind_numericLiteral": "literal numérico",
  "tokenKind_plus": "operador de suma <'+'>",
  "tokenKind_questionMark": "signo de interrogación <'?'>",
  "tokenKind_rightBrace": "llave de cierre <'}'>",
  "tokenKind_rightBracket": "corchete de cierre <']'>",
  "tokenKind_rightParenthesis": "paréntesis de cierre <')'>",
  "tokenKind_semicolon": "punto y coma <';'>",
  "tokenKind_textLiteral": "texto"
}